name: Build and Test

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [chat-service, session-service]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        cd backend/${{ matrix.service }}
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx

    - name: Run tests
      run: |
        cd backend/${{ matrix.service }}
        # Add test commands here when tests are created
        echo "Tests would run here"

    - name: Lint code
      run: |
        cd backend/${{ matrix.service }}
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Lint code
      run: |
        cd frontend
        npm run lint

    - name: Build application
      run: |
        cd frontend
        npm run build

  validate-terraform:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform Format Check
      run: |
        cd infrastructure
        terraform fmt -check

    - name: Terraform Init
      run: |
        cd infrastructure
        terraform init

    - name: Terraform Validate
      run: |
        cd infrastructure
        terraform validate

    - name: Terraform Plan
      run: |
        cd infrastructure
        terraform plan
